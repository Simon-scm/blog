---
import { SITE_TITLE } from '../consts';
import HeaderLink from './HeaderLink.astro';

interface Props { overlay?: boolean }
const { overlay = false } = Astro.props as Props;
---

<header class={`site-header ${overlay ? 'overlay' : ''}`}>
	<nav>
		<h2><a href="/">{SITE_TITLE}</a></h2>
		<div class="internal-links">
			<HeaderLink href="/">Home</HeaderLink>
			<HeaderLink href="/blog">Blog</HeaderLink>
			<HeaderLink href="/about">About</HeaderLink>
		</div>
		<div class="social-links">
			<a href="https://github.com/Simon-scm?tab=repositories" target="_blank">
				<span class="sr-only">Check out my GitHub</span>
				<svg viewBox="0 0 16 16" aria-hidden="true" width="32" height="32"
					><path
						fill="currentColor"
						d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.012 8.012 0 0 0 16 8c0-4.42-3.58-8-8-8z"
					></path></svg
				>
			</a>
		</div>
	</nav>
 </header>
<style>
  header.site-header {
		margin: 0;
		padding: 0.5rem 0;
		background: transparent;
		box-shadow: none;
    position: relative;
    z-index: 1000;
	}
  header.overlay { position: absolute; top: 0vh; left: 0; right: 0; }
  @media (max-width: 720px) { header.overlay { top: 0vh; } }

  /* Hide-on-scroll behavior */
  .site-header { transition: transform 0.3s ease; }
  .site-header.is-hidden { transform: translateY(-120%); }
	h2 {
		margin: 0;
		font-size: 1em;
	}

	h2 a,
	h2 a.active {
		text-decoration: none;
	}
  nav {
    display: flex;
    align-items: center;
    justify-content: space-between;
    width: 960px;
    max-width: calc(100% - 1em);
    margin: 0.25rem auto;
    padding: 0.2rem 0.65rem;
    background: #0e1118;
    border: 1px solid rgba(255, 255, 255, 0.10);
    border-radius: 14px;
    box-shadow: 0 6px 18px rgba(0, 0, 0, 0.25);
  }

	/* Tabs */
	nav a {
		padding: 0.4em 0.6em;
		color: var(--black);
		text-decoration: none;
		position: relative;
		border-radius: 8px;
		transition: transform 0.2s ease, background-color 0.2s ease, color 0.2s ease;
	}
  /* Active state: solid white pill with dark text */
  nav a.active {
    background: #ffffff;
    color: #0b0d12;
    border-radius: 12px;
    box-shadow: inset 0 0 0 1px rgba(255,255,255,0.8);
  }
	/* Group hover: scale all, individual hover: scale a bit more */
  nav:hover .internal-links a { transform: scale(1.06); }
  .internal-links a:hover { transform: scale(1.12); }

  @media (prefers-color-scheme: dark) {
    nav { background: #0e1118; border-color: rgba(255, 255, 255, 0.12); }
    nav a { color: rgba(255, 255, 255, 0.94); }
  }
	nav a.active {
		text-decoration: none;
		border-bottom-color: var(--accent);
	}
	.social-links,
	.social-links a {
		display: flex;
	}
	@media (max-width: 720px) {
		.social-links {
			display: none;
		}
	}
</style>

<script>
  let lastY = 0;
  const headerEl = document.querySelector('header.site-header');
  const onScroll = () => {
    const y = window.scrollY || 0;
    if (!headerEl) return;
    if (y > lastY && y > 24) {
      headerEl.classList.add('is-hidden');
    } else {
      headerEl.classList.remove('is-hidden');
    }
    lastY = y;
  };
  window.addEventListener('scroll', onScroll, { passive: true });
</script>
